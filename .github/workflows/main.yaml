name: CI/CD Pipeline with Security & Compliance

on:
  push:
    branches:
      - main  # Trigger pipeline when code is pushed to the 'main' branch

jobs:
  build_and_scan:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for the job

    steps:
    # Step 1: Checkout code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (to build multi-platform images)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Store DockerHub username in GitHub Secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Store DockerHub password in GitHub Secrets

    # Step 4: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t myapp:$GITHUB_SHA .
        docker tag myapp:$GITHUB_SHA rtx3osie/myapp:$GITHUB_SHA
        docker push rtx3osie/myapp:$GITHUB_SHA  # Push image to Docker Hub

    # Step 5: Run Container Vulnerability Scanning (Trivy) if environment is 'prod'
    - name: Run Trivy vulnerability scan
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          trivy image rtx3osie/myapp:$GITHUB_SHA
        fi
      continue-on-error: true  # Continue the pipeline even if vulnerabilities are found (you can add remediation here)

    # Step 6: Helm Deploy to Kubernetes on EKS
    - name: Helm Deploy to Kubernetes
      run: |
        helm upgrade --install myapp ./helm-chart --set image.tag=$GITHUB_SHA  # Use the latest commit SHA for the image
